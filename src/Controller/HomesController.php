<?php
 namespace App\Controller;
 use Cake\Core\Configure;
 use Cake\ORM\TableRegistry;
 use Cake\I18n\Time;
 use Cake\I18n\I18n;

/**
 * Created by 89ITWORLD.
 * User: Mahipal Singh
 * Date: 28-01-2016
 * Time: 12:55
 * To change this template use File | Settings | File Templates.
 */
 class HomesController extends AppController
 {
    /**
     * home page search a flights
     */
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub

        $this->Auth->allow(['index','autocomplete','userSubscribe','page']);
    }

    public function index(){
        $this->viewBuilder()->layout('home');
        $tours = TableRegistry::get('Tours');
        $tour = $tours->find()->contain(['TourImages'])->where(['status'=>'1','featured'=>'1']);
        $today = Time::now();

        $this->set(compact('today'));
        $this->set(compact('tour'));
    }

     public function autocomplete(){
             $this->autoRender=false;
             $q=$_GET["term"];
             if(!$q){
                 return;
             }
            $locale=I18n::locale();
            $q=strtolower(htmlspecialchars(stripcslashes(trim($q))));
            $q=substr(trim($q),0,25);
            $url_link='https://api.skypicker.com/locations?term='.$q.'&locale='.$locale.'&location_types=airport&limit=10&active_only=true';
            $dataFromApi = file_get_contents($url_link);
            $dataArray=json_decode($dataFromApi,true);
         //pr($dataArray);
             foreach($dataArray['locations'] as $key =>$value) {
                     $data[]=[
                         'key'=>html_entity_decode($value['code']),
                         'label'=>html_entity_decode($value['name'].'-'.$value['code']),
                     ];
                 }
                 header('Content-type: application/json');
                 echo json_encode($data);
            }

    /*public function autocomplete(){
        $this->autoRender=false;
        $q=$_GET["term"];
        if(!$q){
            return;
        }
        $q=strtolower(htmlspecialchars(stripcslashes(trim($q))));
        $q=substr(trim($q),0,100);
        $airport=TableRegistry::get('airports');
        $items=$airport->find('all',array('fields'=>array('AirportName','AirportCode','AirportId')))
            ->where(['AirportName LIKE' => $q.'%'])
            ->orWhere(['AirportCode LIKE' => $q.'%'])
            ->andWhere(['Status' => 1]);
        $items->count();
       // pr($items->count());die;
         if($items->count()==0){
            $q=substr($q,0,2);
            $items=$airport->find('all',array('order' => 'rand()','fields'=>array('AirportName','AirportCode','AirportId')))
                ->where(['AirportName LIKE' => '%'.$q.'%'])
                ->andWhere(['Status' => 1])
                ->limit(5);
        }
        foreach($items as $key =>$value) {
                $data[]=[
                    'key'=>html_entity_decode($value['AirportCode']),
                    'label'=>html_entity_decode($value['AirportName'].'-'.$value['AirportCode']),
                ];
            }
            header('Content-type: application/json');
            echo json_encode($data);
       }*/


     public function userSubscribe(){
         if($this->request->is(['post'])&&!empty($this->request->data["email"])){
             $data = [
                     'email'     => $this->request->data["email"],
                     'status'    => 'subscribed'
                    /* 'firstname' => 'john',
                     'lastname'  => 'doe'*/
                 ];

                 $this->_syncMailchimp($data);
           $this->redirect(["controller"=>"Homes","action"=>"index"]);
         }
         $this->redirect(["controller"=>"Homes","action"=>"index"]);
     }
     function _syncMailchimp($data) {
                   $apiKey = '874849c7b02bd87921eee99278b8cabb-us9';
                   $listId = 'd3b484a87e';

                   $memberId = md5(strtolower($data['email']));
                   $dataCenter = substr($apiKey,strpos($apiKey,'-')+1);
                   $url = 'https://' . $dataCenter . '.api.mailchimp.com/3.0/lists/' . $listId . '/members/' . $memberId;

                   $json = json_encode([
                       'email_address' => $data['email'],
                       'status'        => $data['status'] // "subscribed","unsubscribed","cleaned","pending"
                       /*'merge_fields'  => [
                           'FNAME'     => $data['firstname'],
                           'LNAME'     => $data['lastname']
                       ]*/
                   ]);

                   $ch = curl_init($url);

                   curl_setopt($ch, CURLOPT_USERPWD, 'user:' . $apiKey);
                   curl_setopt($ch, CURLOPT_HTTPHEADER, ['Content-Type: application/json']);
                   curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                   curl_setopt($ch, CURLOPT_TIMEOUT, 10);
                   curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'PUT');
                   curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
                   curl_setopt($ch, CURLOPT_POSTFIELDS, $json);

                   $result = curl_exec($ch);
                   $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
                   curl_close($ch);

                   return $httpCode;
               }

           public function page($slug=null){
                 $this->viewBuilder()->layout('crm');
                 $pages=TableRegistry::get('Contents');
                 $page=$pages->find()->select(['description','meta_description','meta_keywords'])->where(['link_title'=>$slug,'status'=>'active'])->first();
			  // print_r($page);exit;
                 $this->set(compact('page'));
             }


}
